#+startup: fold

* Selections for systems
** rd-nb-ubuntu
#+begin_src emacs-lisp :tangle config-rd-nb-ubuntu :noweb yes
  <<all>>
  <<rd-nb-ubuntu>>
#+end_src
** rd-nb-work
#+begin_src emacs-lisp :tangle config-rd-nb-work :noweb yes
  <<all>>
  <<rd-nb-work>>
#+end_src
** chaapp-ubuntu
#+begin_src emacs-lisp :tangle config-chaapp-ubuntu :noweb yes
  <<all>>
  <<chaapp-ubuntu>>
#+end_src

** chaapp-nb-arch
#+begin_src emacs-lisp :tangle config-chaapp-nb-arch :noweb yes
  <<all>>
  <<chaapp-nb-arch>>
#+end_src
** nb-media
#+begin_src emacs-lisp :tangle config-nb-media :noweb yes
  <<all>>
  <<nb-media>>
#+end_src

* variables and includes
#+begin_src shell :noweb-ref all
  ### Variables
  #
  # Logo key. Use Mod1 for Alt.
  set $mod Mod4
  # Home row direction keys, like vim
  set $left h
  set $down j
  set $up k
  set $right l
  # Your preferred terminal emulator
  set $term alacritty
  # Your preferred application launcher
  # Note: pass the final command to swaymsg so that the resulting window can be opened
  # on the original workspace that the command was run on.
  set $menu dmenu_path | dmenu | xargs swaymsg exec --

  include /etc/sway/config-vars.d/*
#+end_src

* output config
#+begin_src shell :noweb-ref all
  ### Output configuration
  #
  # Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
  #output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
  #
  # Example configuration:
  #
 output HDMI-A-1 resolution 1920x1080 position 0,0
  #
  # You can get the names of your outputs by running: swaymsg -t get_outputs
#+end_src
* idle configuration
#+begin_src shell :noweb-ref all
  ### Idle configuration
  #
  # Example configuration:
  #
  exec swayidle -w \
            timeout 300 'swaylock -f -c 000000' \
            timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
            before-sleep 'swaylock -f -c 000000'
  #
  # This will lock your screen after 300 seconds of inactivity, then turn off
  # your displays after another 300 seconds, and turn your screens back on when
  # resumed. It will also lock your screen before your computer goes to sleep.
#+end_src

* key bindings
#+begin_src shell :noweb-ref all
  ### Key bindings
  #
  # Basics:
  #
      # Start a terminal
      bindsym $mod+Return exec $term

      # Kill focused window
      bindsym $mod+Shift+c kill

      # Start your launcher
      bindsym $mod+Shift+Return exec $menu

      # Drag floating windows by holding down $mod and left mouse button.
      # Resize them with right mouse button + $mod.
      # Despite the name, also works for non-floating windows.
      # Change normal to inverse to use left mouse button for resizing and right
      # mouse button for dragging.
      floating_modifier $mod normal

      # Reload the configuration file
      bindsym $mod+Shift+r reload

      # Exit sway (logs you out of your Wayland session)
      bindsym $mod+Shift+q exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
  #
  # Moving around:
  #
      # Move your focus around
      bindsym $mod+$left focus left
      bindsym $mod+$down focus down
      bindsym $mod+$up focus up
      bindsym $mod+$right focus right
      # Or use $mod+[up|down|left|right]
      bindsym $mod+Left focus left
      bindsym $mod+Down focus down
      bindsym $mod+Up focus up
      bindsym $mod+Right focus right

      # Move the focused window with the same, but add Shift
      bindsym $mod+Shift+$left move left
      bindsym $mod+Shift+$down move down
      bindsym $mod+Shift+$up move up
      bindsym $mod+Shift+$right move right
      # Ditto, with arrow keys
      bindsym $mod+Shift+Left move left
      bindsym $mod+Shift+Down move down
      bindsym $mod+Shift+Up move up
      bindsym $mod+Shift+Right move right
  #
  # Workspaces:
  #
      # Switch to workspace
      bindsym $mod+1 workspace number 1
      bindsym $mod+2 workspace number 2
      bindsym $mod+3 workspace number 3
      bindsym $mod+4 workspace number 4
      bindsym $mod+5 workspace number 5
      bindsym $mod+6 workspace number 6
      bindsym $mod+7 workspace number 7
      bindsym $mod+8 workspace number 8
      bindsym $mod+9 workspace number 9


      # Move Workspace

      #bindsym $mod+0 workspace number 10
      # Move focused container to workspace
      bindsym $mod+Shift+1 move container to workspace number 1
      bindsym $mod+Shift+2 move container to workspace number 2
      bindsym $mod+Shift+3 move container to workspace number 3
      bindsym $mod+Shift+4 move container to workspace number 4
      bindsym $mod+Shift+5 move container to workspace number 5
      bindsym $mod+Shift+6 move container to workspace number 6
      bindsym $mod+Shift+7 move container to workspace number 7
      bindsym $mod+Shift+8 move container to workspace number 8
      bindsym $mod+Shift+9 move container to workspace number 9
      #bindsym $mod+Shift+0 move container to workspace number 10
      # Note: workspaces can have any name you want, not just numbers.
      # We just use 1-10 as the default.
  #    bindsym Right move workspace to output right
  # Layout stuff:
  #
      # You can "split" the current object of your focus with
      # $mod+b or $mod+v, for horizontal and vertical splits
      # respectively.
      bindsym $mod+b splith
      bindsym $mod+v splitv

      # Switch the current container between different layout styles
      bindsym $mod+s layout stacking
      bindsym $mod+w layout tabbed
      bindsym $mod+e layout toggle split

      # Make the current focus fullscreen
      bindsym $mod+f fullscreen

      # Toggle the current focus between tiling and floating mode
      bindsym $mod+Shift+space floating toggle

      # Swap focus between the tiling area and the floating area
      bindsym $mod+space focus mode_toggle

      # Move focus to the parent container
      bindsym $mod+a focus parent
  #
  # Scratchpad:
  #
      # Sway has a "scratchpad", which is a bag of holding for windows.
      # You can send windows there and get them back later.

      # Move the currently focused window to the scratchpad
      bindsym $mod+Shift+minus move scratchpad

      # Show the next scratchpad window or hide the focused scratchpad window.
      # If there are multiple scratchpad windows, this command cycles through them.
      bindsym $mod+minus scratchpad show
#+end_src

* resize-mode
#+begin_src shell :noweb-ref all
  # Resizing containers:
  #
  mode "resize" {
      # left will shrink the containers width
      # right will grow the containers width
      # up will shrink the containers height
      # down will grow the containers height
      bindsym $left resize shrink width 30px
      bindsym $down resize grow height 30px
      bindsym $up resize shrink height 30px
      bindsym $right resize grow width 30px

      # Ditto, with arrow keys
      bindsym Left resize shrink width 10px
      bindsym Down resize grow height 10px
      bindsym Up resize shrink height 10px
      bindsym Right resize grow width 10px

      # Return to default mode
      bindsym Return mode "default"
      bindsym Escape mode "default"
  }
  bindsym $mod+r mode "resize"
#+end_src
* display-mode
#+begin_src shell :noweb-ref all
  # Resizing containers:
  #
  mode "display" {
      # left will shrink the containers width
      # right will grow the containers width
      # up will shrink the containers height
      # down will grow the containers height
      bindsym 0 output eDP-1 toggle
      bindsym 1 output DP-1 toggle
      bindsym 2 output DP-2 toggle
      bindsym 3 output HDMI-1 toggle
      
      bindsym Return mode "default"
      bindsym Escape mode "default"
  }
  bindsym $mod+p mode "display"
#+end_src

* workspace-mode
#+begin_src shell :noweb-ref all
  mode "workspace move" {
      bindsym Right move workspace to output right
      bindsym Left move workspace to output left

      # Return to default mode
      bindsym Return mode "default"
      bindsym Escape mode "default"
  }
  bindsym $mod+m mode "workspace move"
#+end_src
* status-bar
#+begin_src shell :noweb-ref all
  #
  # Status Bar:
  #
  # Read `man 5 sway-bar` for more information about this section.
  # bar {
  #     position top

  #     # When the status_command prints a new line to stdout, swaybar updates.
  #     # The default just shows the current date and time.
  #     status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done

  #     colors {
  #         statusline #ffffff
  #         background #323232
  #         inactive_workspace #32323200 #32323200 #5c5c5c
  #     }
  # }


  #bar {
  #    position top
  #    status_command i3status
  #}
#+end_src

* keyboard-layout
#+begin_src shell :noweb-ref all
  input type:keyboard {
          xkb_layout de,us
  }
  bindsym $mod+0 input type:keyboard xkb_switch_layout next
#+end_src

* includes
#+begin_src shell :noweb-ref all
  include /etc/sway/config.d/*
#+end_src
* disable titlebars
#+begin_src shell :noweb-ref all
  #No titlebars
  #
  default_border pixel
#+end_src
* gaps between containers
#+begin_src shell :noweb-ref all
  #Gaps between windows
  gaps inner 10

#+end_src
* autostart
** rd-nb-ubuntu
#+begin_src shell :noweb-ref rd-nb-ubuntu
  # Autostart
  exec waybar
  exec emacs --daemon
  exec emacsclient -c -n -a  ""
  exec nextcloud
  exec keepassxc ~/Nextcloud/privat/KeePassRD.kdbx
  exec export SSH_AUTH_SOCK=/run/user/1000/ssh-agent.socket
#+end_src
** chaapp-nb-arch
#+begin_src shell :noweb-ref chaapp-nb-arch
  # Autostart
  exec waybar
  exec emacs --daemon
  exec emacsclient -c -n -a  ""
  exec nextcloud
  exec keepassxc ~/Nextcloud/privat/KeePassRD.kdbx
  exec export SSH_AUTH_SOCK=/run/user/1000/ssh-agent.socket
#+end_src
** nb-media
#+begin_src shell :noweb-ref nb-media
  # Autostart
  exec waybar

#+end_src
